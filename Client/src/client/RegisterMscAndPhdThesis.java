/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import Information.MscThesis;
import Information.PhdThesis;
import Information.Student;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 *
 * @author Irana
 */
public class RegisterMscAndPhdThesis extends javax.swing.JFrame {

    /**
     * Creates new form RegisterMscAndPhdThesis
     */
    private Student s;
    private String supId, adId, supId2;
    private boolean f1 = false, f2 = false, f3 = false, f4 = false;

    public RegisterMscAndPhdThesis(Student s1) {
        initComponents();
        s = s1;
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((int) (d.getWidth() - this.getWidth()) / 2, (int) (d.getHeight() - this.getHeight()) / 2);
        this.setTitle("Register Thesis");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lab_supervisor = new javax.swing.JLabel();
        lab_spervisorId2 = new javax.swing.JLabel();
        lab_advisor = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_supervisorId = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        txt_supervisorName2 = new javax.swing.JTextPane();
        jScrollPane12 = new javax.swing.JScrollPane();
        txt_advisorName = new javax.swing.JTextPane();
        jScrollPane16 = new javax.swing.JScrollPane();
        txt_topic = new javax.swing.JTextPane();
        jScrollPane17 = new javax.swing.JScrollPane();
        txt_summary = new javax.swing.JTextArea();
        btn_register = new javax.swing.JButton();
        lab_topic = new javax.swing.JLabel();
        lab_supervisorName = new javax.swing.JLabel();
        lab_summary = new javax.swing.JLabel();
        btn_supervisorSearch = new javax.swing.JButton();
        btn_supervisorSearch2 = new javax.swing.JButton();
        btn_advisorSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lab_topic1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBackground(new java.awt.Color(102, 255, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText(" Student and Personnel Automation of Isfahan University");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 255, 204));

        lab_supervisor.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lab_supervisor.setText("Supervisor ID:");

        lab_spervisorId2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lab_spervisorId2.setText("Supervisor ID2:");

        lab_advisor.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lab_advisor.setText("Advisor ID:");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel17.setText("Topic:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel18.setText("Summary:");

        btn_back.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_back.setText("BACK");
        btn_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_backMouseClicked(evt);
            }
        });

        txt_supervisorId.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jScrollPane5.setViewportView(txt_supervisorId);

        txt_supervisorName2.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jScrollPane10.setViewportView(txt_supervisorName2);

        txt_advisorName.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jScrollPane12.setViewportView(txt_advisorName);

        txt_topic.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jScrollPane16.setViewportView(txt_topic);

        txt_summary.setColumns(20);
        txt_summary.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txt_summary.setRows(5);
        jScrollPane17.setViewportView(txt_summary);

        btn_register.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_register.setText(" register");
        btn_register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_registerMouseClicked(evt);
            }
        });

        lab_topic.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lab_topic.setForeground(new java.awt.Color(255, 0, 51));
        lab_topic.setText("*");

        lab_supervisorName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lab_supervisorName.setForeground(new java.awt.Color(255, 0, 51));
        lab_supervisorName.setText("*");

        lab_summary.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lab_summary.setForeground(new java.awt.Color(255, 0, 51));
        lab_summary.setText("*");

        btn_supervisorSearch.setText("?");
        btn_supervisorSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_supervisorSearchMouseClicked(evt);
            }
        });

        btn_supervisorSearch2.setText("?");
        btn_supervisorSearch2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_supervisorSearch2MouseClicked(evt);
            }
        });

        btn_advisorSearch.setText("?");
        btn_advisorSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_advisorSearchMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("If you have one supervisor,");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("leave this field blank.");

        lab_topic1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lab_topic1.setForeground(new java.awt.Color(255, 0, 51));
        lab_topic1.setText("*");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane17)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lab_topic)
                                .addGap(54, 54, 54)
                                .addComponent(btn_register)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(lab_supervisor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lab_supervisorName, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_supervisorSearch)
                                        .addGap(36, 36, 36)
                                        .addComponent(lab_spervisorId2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel18)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lab_summary)
                                            .addGap(373, 373, 373))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                            .addComponent(lab_advisor)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lab_topic1)
                                            .addGap(5, 5, 5)
                                            .addComponent(btn_advisorSearch)
                                            .addGap(116, 116, 116))))
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_supervisorSearch2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_back)
                        .addComponent(btn_register)
                        .addComponent(lab_topic))
                    .addComponent(jLabel17)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lab_supervisorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_supervisorSearch))
                            .addComponent(lab_supervisor)
                            .addComponent(jScrollPane5)
                            .addComponent(lab_spervisorId2)
                            .addComponent(jScrollPane10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_advisorSearch)
                                .addComponent(lab_topic1))
                            .addComponent(lab_advisor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(lab_summary)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_supervisorSearch2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_backMouseClicked
        // TODO add your handling code here:
        StudentThesisSystem sts = new StudentThesisSystem(s);
        sts.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_backMouseClicked

    private void btn_supervisorSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_supervisorSearchMouseClicked
        // TODO add your handling code here:
        if (txt_supervisorId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Starred fields should not be empty", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Client.os.writeInt(6);
                Client.os.flush();
                Client.os.writeObject(txt_supervisorId.getText());
                Client.os.flush();
                if (Client.is.readBoolean()) {
                    JOptionPane.showMessageDialog(this, "supervisor finded :)", "Find", JOptionPane.INFORMATION_MESSAGE);
                    supId = txt_supervisorId.getText();
                    txt_supervisorId.setText((String) Client.is.readObject());
                    txt_supervisorId.setEditable(false);
                    lab_supervisor.setText("Supervisor Name:");
                    f1 = true;
                    btn_supervisorSearch.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "this ID is not correct", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Server Not Find.", "ERROR", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_supervisorSearchMouseClicked

    private void btn_advisorSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_advisorSearchMouseClicked
        // TODO add your handling code here:
        if (txt_advisorName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Starred fields should not be empty", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Client.os.writeInt(6);
                Client.os.flush();
                Client.os.writeObject(txt_advisorName.getText());
                Client.os.flush();
                if (Client.is.readBoolean()) {
                    JOptionPane.showMessageDialog(this, "Advisor finded :)", "Find", JOptionPane.INFORMATION_MESSAGE);
                    adId = txt_advisorName.getText();
                    txt_advisorName.setText((String) Client.is.readObject());
                    txt_advisorName.setEditable(false);
                    lab_advisor.setText("Advisor Name:");
                    f2 = true;
                    btn_advisorSearch.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "this ID is not correct", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Server Not Find.", "ERROR", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_advisorSearchMouseClicked

    private void btn_supervisorSearch2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_supervisorSearch2MouseClicked
        // TODO add your handling code here:
        if (txt_supervisorName2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "If you have one supervisor,leave this field blank.othervise fill this field.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Client.os.writeInt(6);
                Client.os.flush();
                Client.os.writeObject(txt_supervisorName2.getText());
                Client.os.flush();
                if (Client.is.readBoolean()) {
                    JOptionPane.showMessageDialog(this, "sAdvisor finded :)", "Find", JOptionPane.INFORMATION_MESSAGE);
                    supId2 = txt_supervisorName2.getText();
                    txt_supervisorName2.setText((String) Client.is.readObject());
                    txt_supervisorName2.setEditable(false);
                    lab_spervisorId2.setText("Supervisor Name2:");
                    f3 = true;
                    f4 = true;
                    btn_supervisorSearch2.setVisible(false);
                } else {
                    f3 = false;
                    JOptionPane.showMessageDialog(this, "this ID is not correct", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Server Not Find.", "ERROR", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_supervisorSearch2MouseClicked

    private void btn_registerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_registerMouseClicked
        // TODO add your handling code here:
        if (s.get_level().equals("MSC")) {
            if (txt_supervisorName2.getText().isEmpty()) {
                f3 = true;
            }
            if (txt_topic.getText().isEmpty() || !f1 || !f2 || !f3 || txt_summary.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Starred fields should not be empty and  If this thesis have just one supervisor leave field Supervisor ID 2 blank.", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                if (f4) {
                    MscThesis mst = new MscThesis(s.get_name() + " " + s.get_lastname(), s.get_Id(), s.get_field(), txt_topic.getText(), txt_summary.getText(), txt_supervisorId.getText(), supId, txt_supervisorName2.getText(), supId2, txt_advisorName.getText(), adId);
                    try {
                        Client.os.writeInt(12);
                        Client.os.flush();
                        Client.os.writeObject(mst);
                        Client.os.flush();
                        mst.set_Id(Client.is.readInt());
                        s.add_thesis(mst);
                        JOptionPane.showMessageDialog(this, "Thesis added successfully :) .we sent your request to supervisors for approve.", "Find", JOptionPane.INFORMATION_MESSAGE);
                        StudentThesisSystem sts = new StudentThesisSystem(s);
                        sts.setVisible(true);
                        this.dispose();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Server Not Find.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                    }
                } else {
                    MscThesis mst2 = new MscThesis(s.get_name() + " " + s.get_lastname(), s.get_Id(), s.get_field(), txt_topic.getText(), txt_summary.getText(), txt_supervisorId.getText(), supId, txt_advisorName.getText(), adId);
                    try {
                        Client.os.writeInt(12);
                        Client.os.flush();
                        Client.os.writeObject(mst2);
                        Client.os.flush();
                        mst2.set_Id(Client.is.readInt());
                        s.add_thesis(mst2);
                        JOptionPane.showMessageDialog(this, "Thesis added successfully :) .we sent your request to supervisor for approve.", "Find", JOptionPane.INFORMATION_MESSAGE);
                        StudentThesisSystem sts = new StudentThesisSystem(s);
                        sts.setVisible(true);
                        this.dispose();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Server Not Find.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                    }
                }
            }
        } else {
            if (txt_supervisorName2.getText().isEmpty()) {
                f3 = true;
            }
            if (txt_topic.getText().isEmpty() || !f1 || !f2 || !f3 || txt_summary.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Starred fields should not be empty and  If this thesis have just one supervisor leave field Supervisor ID 2 blank.", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                if (f4) {
                    PhdThesis pht = new PhdThesis(s.get_name() + " " + s.get_lastname(), s.get_Id(), s.get_field(), txt_topic.getText(), txt_summary.getText(), txt_supervisorId.getText(), supId, txt_supervisorName2.getText(), supId2, txt_advisorName.getText(), adId);
                    try {
                        Client.os.writeInt(13);
                        Client.os.flush();
                        Client.os.writeObject(pht);
                        Client.os.flush();
                        pht.set_Id(Client.is.readInt());
                        s.add_thesis(pht);
                        JOptionPane.showMessageDialog(this, "Thesis added successfully :) .we sent your request to supervisors for approve.", "Find", JOptionPane.INFORMATION_MESSAGE);
                        StudentThesisSystem sts = new StudentThesisSystem(s);
                        sts.setVisible(true);
                        this.dispose();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Server Not Find.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                    }
                } else {
                    PhdThesis pht2 = new PhdThesis(s.get_name() + " " + s.get_lastname(), s.get_Id(), s.get_field(), txt_topic.getText(), txt_summary.getText(), txt_supervisorId.getText(), supId, txt_advisorName.getText(), adId);
                    try {
                        Client.os.writeInt(13);
                        Client.os.flush();
                        Client.os.writeObject(pht2);
                        Client.os.flush();
                        pht2.set_Id(Client.is.readInt());
                        s.add_thesis(pht2);
                        JOptionPane.showMessageDialog(this, "Thesis added successfully :) .we sent your request to supervisor for approve.", "Find", JOptionPane.INFORMATION_MESSAGE);
                        StudentThesisSystem sts = new StudentThesisSystem(s);
                        sts.setVisible(true);
                        this.dispose();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Server Not Find.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_registerMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_advisorSearch;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_register;
    private javax.swing.JButton btn_supervisorSearch;
    private javax.swing.JButton btn_supervisorSearch2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lab_advisor;
    private javax.swing.JLabel lab_spervisorId2;
    private javax.swing.JLabel lab_summary;
    private javax.swing.JLabel lab_supervisor;
    private javax.swing.JLabel lab_supervisorName;
    private javax.swing.JLabel lab_topic;
    private javax.swing.JLabel lab_topic1;
    private javax.swing.JTextPane txt_advisorName;
    private javax.swing.JTextArea txt_summary;
    private javax.swing.JTextPane txt_supervisorId;
    private javax.swing.JTextPane txt_supervisorName2;
    private javax.swing.JTextPane txt_topic;
    // End of variables declaration//GEN-END:variables
}
